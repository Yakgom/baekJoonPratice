import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.Arrays;
import java.util.Map;
import java.util.StringTokenizer;
import java.util.TreeMap;

public class Main {

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		StringTokenizer st;
		StringBuilder sb = new StringBuilder();
		
		int N = Integer.parseInt(br.readLine()); // 배열의길이
		
		int[] arr = new int[N]; // 첫번째 정렬을 할 배열
		
		int[] arr2 = new int[N]; // 나중에 압축을 하기위해 복사할 배열
		
		st= new StringTokenizer(br.readLine());
		
		Map<Integer,Integer> map = new TreeMap(); // 배열을 map에 저장하면서 count로 번호가 몇번쨰로 큰수인가 카운팅함
		
		int count=0;
		
		for(int i=0; i<arr.length; i++) {
			arr[i] = Integer.parseInt(st.nextToken()); // 배열에 수 저장
			arr2[i]=arr[i]; // 배열복사
		
			
		}
		
	
		
		Arrays.sort(arr); // 정렬 
			
		
		for(int i : arr) {
			
			if (!map.containsKey(i)) { // 만약 맵 킵값에 배열의 값이 안들어가있다면
			    map.put(i, count++); // 키값에 i 를 넣어주고 count값을 value로 넣어줌
			}
			
		}
		
		for(int i=0; i<arr2.length; i++) { // 복사한 배열을 바꿔주기위한 반복문
			
			if( map.containsKey(arr[i])) { // 만약 맵 키값이랑 같은 숫자가 있다면 
				arr2[i] = map.get(arr2[i]).intValue(); // key값에있는 밸류를 가져오면서 배열에 넣어줌
			}
			
			sb.append(arr2[i]);
			sb.append(" ");
		}
		
		bw.write(sb.toString());
		bw.flush();
		bw.close();
		br.close();
	}

}

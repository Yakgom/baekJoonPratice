import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.Set;
import java.util.TreeSet;






public class Main {
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		//StringTokenizer st;
		StringBuilder sb = new StringBuilder();
		
		int N = Integer.parseInt(br.readLine());
		
		Set<String> set = new TreeSet<>((a,b)->{
	       
			int tmp = Integer.compare(a.length(), b.length());
			
			if(tmp ==0) {
				return a.compareTo(b);
			}else {
				return tmp;
			}
			
			
		}); // 이전과 같으나 set객체를 만들면서 생성자에 람다식으로 정렬 조건을 넣어주고 중복값은 안들어가니까 출력함
		
		for(int i=0; i<N; i++) {
			set.add(br.readLine());
		}
		
		set.forEach(System.out::println);
		
		
		bw.close();
		br.close();
		
	}
}

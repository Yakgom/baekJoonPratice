import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.Arrays;
import java.util.Collections;
import java.util.StringTokenizer;

public class Main {
 
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		//BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

		//StringTokenizer st;


		//st = new StringTokenizer(br.readLine());

		//StringBuilder sb = new StringBuilder();
	
		
		
		int N = Integer.parseInt(br.readLine());
		
		int a = 1;
		
		int stack = 1;
		
		while(true) {
		
		// while문을 돌으면서 1이면 1/1 이기 때문에 바로 탈출해주고 나머지는 입력받은 배열의 번째수를 찾기위함 그리고 배열의 마지막 번째수도 찾음
			
		if(N==1) {
			break;
		}
		
		stack += a+1;
		a++;
		
		if(stack>=N) {
			break;
		}
		}
		

		String[] strs = new String[a];
		int stat = a;

		if(a%2==0) {   // 그열의 들어가는 배열의 번째수가 짝수번째면 위에부터 출력하기위한 코드 
		for(int i=0; i<strs.length; i++) {
			
			strs[i] = (i+1)+"/"+a;
			
			
			a--;
		}
		
		}
		else { // 위에 반대로 들어가는 코드
			for(int i=0; i<strs.length; i++) {
				strs[i] = a+"/"+(i+1);
				
				a--;
			}
		}
		
	
		
		
		
		int index = N+stat-1-stack;  // 받은값 + 스택-1(인덱스는 0부터시작이라) - stack (그 열의 제일 높은 수)
		
		System.out.println(strs[index]);
		
		//bw.close();
		br.close();
		
	
		
	}
	
	
}
